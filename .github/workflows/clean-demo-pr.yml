name: Clean demo PR AWS resources

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      pr-number:
        description: 'PR number'
        required: true
        type: number
        default: 000

jobs:
  clean-pr:
    strategy:
      matrix:
        include:
          - target: "dev"
            r53_zone: "Z00288701IWCJCEU7JLX1"
          - target: "uat"
            r53_zone: "Z02608583VKW5TMX3B5ED"
          - target: "prod"
            r53_zone: "Z0005272EGK5MRGCU1B9"
  runs-on: ubuntu-latest
#    environment: 'demo'
#    env:
#      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
#    steps:
#    - name: Configure AWS Credentials
#      id: configure-aws
#      uses: aws-actions/configure-aws-credentials@v4
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
#    - name: Post to slack (cleaning starting)
#      id: slack_pre
#      uses: slackapi/slack-github-action@v1.25.0
#      env:
#        SLACK_BOT_TOKEN: ${{ secrets.SLACK_ACCESS_TOKEN }}
#      with:
#        channel-id: ${{ secrets.SLACK_DEFAULT_CHANNEL }}
#        payload: |
#          {
#            "blocks": [
#              {
#                "type": "section",
#                "text": {
#                  "type": "mrkdwn",
#                  "text": ":information_source: Cleaning job *DEMO PR-${{ inputs.pr-number }}* for platform-ui@${{ matrix.target }} is about to start."
#                }
#              },
#              {
#                "type": "section",
#                "text": {
#                  "type": "mrkdwn",
#                  "text": "*Job Number*: ${{ github.run_number }}"
#                },
#                "accessory": {
#                  "type": "button",
#                  "text": {
#                    "type": "plain_text",
#                    "text": "Visit Job",
#                    "emoji": true
#                  },
#                  "value": "click_me_123",
#                  "url": "https://github.com/${{ github.repository}}/actions/runs/${{ github.run_id }}",
#                  "action_id": "button-action"
#                }
#              }
#            ]
#          }
    - name: Clean AWS resources
      id: cleanup_routine
      run: |
        DEMO_NAME="pr-${{ inputs.pr-number }}"
        export DEMO_NAME && echo "DEMO_NAME=${DEMO_NAME}"

#        # route53 alias
#        echo "Searching for Route53 aliases..."
#        aws route53 list-resource-record-sets --hosted-zone-id ${{ matrix.r53_zone }} --query="ResourceRecordSets[?Name == '${DEMO_NAME}.${{ matrix.target }}.thinkalpha.io.']" | tee tmp-route53-demo-resources.json
#        jq  '.[] | {"Action": "DELETE", "ResourceRecordSet": {"Name": .Name, "Type": .Type, "AliasTarget": {"HostedZoneId": "Z2FDTNDATAQYW2", "DNSName": .AliasTarget.DNSName, "EvaluateTargetHealth": false } } }' tmp-route53-demo-resources.json | jq -s '{"Comment": "Delete platform-ui demos aliases", "Changes": .}' | tee tmp-route53-changeset.json
#        echo "Executing Route53 changeset..."
#        aws route53 change-resource-record-sets --hosted-zone-id ${{ matrix.r53_zone }} --change-batch file://tmp-route53-changeset.json || echo 'Not an issue, continue ...'
#
#        # cloudfront distributions
#        echo "Searching for Cloudfront distributions..."
#        aws cloudfront list-distributions --query "DistributionList.Items[?contains(DefaultCacheBehavior.TargetOriginId,\`-demo-${DEMO_NAME}-us-east-1-${{ matrix.target }}\`) == \`true\`].Id" | tee tmp-cloudfront-demo-resources-ids.json
#
#        echo "Deleting Cloudfront distributions..."
#        for ID in $(jq -r '.[]' tmp-cloudfront-demo-resources-ids.json); do
#          aws cloudfront get-distribution-config --id ${ID} > tmp-cloudfront-config-${ID}.json
#          jq '.DistributionConfig.Enabled = false' tmp-cloudfront-config-${ID}.json > tmp-cloudfront-config-${ID}-disabled.json
#          ETAG=$(jq -r '.ETag' tmp-cloudfront-config-${ID}-disabled.json)
#          jq '.DistributionConfig' tmp-cloudfront-config-${ID}-disabled.json > tmp-cloudfront-config-${ID}-disabled-distribution-config-only.json
#          ETAG_NEW=$(aws cloudfront update-distribution --id ${ID} --if-match ${ETAG} --distribution-config file://tmp-cloudfront-config-${ID}-disabled-distribution-config-only.json | jq -r .ETag)
#          aws cloudfront wait distribution-deployed --id ${ID} --debug # --debug to satisfy Github's output requirements
#          aws cloudfront delete-distribution --id ${ID} --if-match ${ETAG_NEW}
#        done
#
#        # cloudfront OAIs
#        echo "Searching for Cloudfront Origin Access Identities..."
#        aws cloudfront list-cloud-front-origin-access-identities --query "CloudFrontOriginAccessIdentityList.Items[?contains(Comment,\`-demo-${DEMO_NAME}-us-east-1-${{ matrix.target }}\`) == \`true\`]" | tee tmp-cloudfront-oai.json
#
#        echo "Deleting Cloudfront Origin Access Identities..."
#        for ID in $(jq -r '.[].Id' tmp-cloudfront-oai.json); do
#          aws cloudfront get-cloud-front-origin-access-identity --id ${ID} > tmp-cloudfront-oai-config-${ID}.json
#          ETAG=$( jq -r '.ETag' tmp-cloudfront-oai-config-${ID}.json )
#          aws cloudfront delete-cloud-front-origin-access-identity --id ${ID} --if-match ${ETAG}
#        done
#
#        # s3 buckets
#        echo "Searching for S3 bucket..."
#        aws s3api list-buckets --query="Buckets[?contains(Name,\`-demo-${DEMO_NAME}-us-east-1-${{ matrix.target }}\`) == \`true\`]" | tee tmp-buckets.json
#
#        echo "Deleting s3 bucket..."
#        for bucket in $(jq -r '.[].Name' tmp-buckets.json); do
#          aws s3 rb s3://${bucket} --force
#        done
#    - name: Post to slack (cleaning sucessful)
#      id: slack_post_success
#      if: ${{ success() }}
#      uses: slackapi/slack-github-action@v1.25.0
#      env:
#        SLACK_BOT_TOKEN: ${{ secrets.SLACK_ACCESS_TOKEN }}
#      with:
#        channel-id: ${{ secrets.SLACK_DEFAULT_CHANNEL }}
#        payload: |
#          {
#            "blocks": [
#              {
#                "type": "section",
#                "text": {
#                  "type": "mrkdwn",
#                  "text": ":tada: Cleaning job *DEMO PR-${{ inputs.pr-number }}* for platform-ui@${{ matrix.target }} has succeeded."
#                }
#              },
#              {
#                "type": "section",
#                "text": {
#                  "type": "mrkdwn",
#                  "text": "*Job Number*: ${{ github.run_number }}"
#                },
#                "accessory": {
#                  "type": "button",
#                  "text": {
#                    "type": "plain_text",
#                    "text": "Visit Job",
#                    "emoji": true
#                  },
#                  "value": "click_me_123",
#                  "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
#                  "action_id": "button-action"
#                }
#              }
#            ]
#          }
#    - name: Post to slack (cleaning failed)
#      id: slack_post_failure
#      if: ${{ failure() }}
#      uses: slackapi/slack-github-action@v1.25.0
#      env:
#        SLACK_BOT_TOKEN: ${{ secrets.SLACK_ACCESS_TOKEN }}
#      with:
#        channel-id: ${{ secrets.SLACK_DEFAULT_CHANNEL }}
#        payload: |
#          {
#            "blocks": [
#              {
#                "type": "section",
#                "text": {
#                  "type": "mrkdwn",
#                  "text": ":red_circle: Cleaning job *DEMO PR-${{ inputs.pr-number }}* for platform-ui@${{ matrix.target }}has failed. *Manual verification required!* @devops_team"
#                }
#              },
#              {
#                "type": "section",
#                "text": {
#                  "type": "mrkdwn",
#                  "text": "*Job Number*: ${{ github.run_number }}"
#                },
#                "accessory": {
#                  "type": "button",
#                  "text": {
#                    "type": "plain_text",
#                    "text": "Visit Job",
#                    "emoji": true
#                  },
#                  "value": "click_me_123",
#                  "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
#                  "action_id": "button-action"
#                }
#              }
#            ]
#          }